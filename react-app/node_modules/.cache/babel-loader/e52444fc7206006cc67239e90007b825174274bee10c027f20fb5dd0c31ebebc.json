{"ast":null,"code":"import React from\"react\";import{BrowserRouter,Switch,Route}from\"react-router-dom\";import Create from\"./components/Create\";import Read from\"./components/Read\";import Update from\"./components/Update\";const Routes=()=>{return/*#__PURE__*/React.createElement(BrowserRouter,null,/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{path:\"/\",exact:true,component:Read}),/*#__PURE__*/React.createElement(Route,{path:\"/create\",exact:true,component:Create}),/*#__PURE__*/React.createElement(Route,{path:\"/update/:id\",exact:true,component:Update})));};export default Routes;","map":{"version":3,"names":["React","BrowserRouter","Switch","Route","Create","Read","Update","Routes","createElement","path","exact","component"],"sources":["/home/ubuntu/mern-crud/mern-crud-app-master/react-app/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Create from \"./components/Create\";\nimport Read from \"./components/Read\";\nimport Update from \"./components/Update\";\n\nconst Routes = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Read} />\n        <Route path=\"/create\" exact component={Create} />\n        <Route path=\"/update/:id\" exact component={Update} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Routes;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,aAAa,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CAC/D,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CAExC,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnB,mBACEP,KAAA,CAAAQ,aAAA,CAACP,aAAa,mBACZD,KAAA,CAAAQ,aAAA,CAACN,MAAM,mBACLF,KAAA,CAAAQ,aAAA,CAACL,KAAK,EAACM,IAAI,CAAC,GAAG,CAACC,KAAK,MAACC,SAAS,CAAEN,IAAK,CAAE,CAAC,cACzCL,KAAA,CAAAQ,aAAA,CAACL,KAAK,EAACM,IAAI,CAAC,SAAS,CAACC,KAAK,MAACC,SAAS,CAAEP,MAAO,CAAE,CAAC,cACjDJ,KAAA,CAAAQ,aAAA,CAACL,KAAK,EAACM,IAAI,CAAC,aAAa,CAACC,KAAK,MAACC,SAAS,CAAEL,MAAO,CAAE,CAC9C,CACK,CAAC,CAEpB,CAAC,CAED,cAAe,CAAAC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}