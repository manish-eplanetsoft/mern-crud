{"ast":null,"code":"const API = \"http://localhost:8080\";\nexport const createUser = user => {\n  return fetch(`${API}/api/user`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(reponse => {\n    return reponse.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const readUsers = () => {\n  return fetch(`${API}/api/user`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(reponse => {\n    return reponse.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const readUserById = userId => {\n  return fetch(`${API}/api/user/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(reponse => {\n    return reponse.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const updateUser = (userId, user) => {\n  return fetch(`${API}/api/user/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(reponse => {\n    return reponse.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const deleteUser = userId => {\n  return fetch(`${API}/api/user/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(reponse => {\n    return reponse.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"names":["API","createUser","user","fetch","method","headers","Accept","body","JSON","stringify","then","reponse","json","catch","err","console","log","readUsers","readUserById","userId","updateUser","deleteUser"],"sources":["/home/ubuntu/mern-crud/mern-crud-app-master/react-app/src/services/user.js"],"sourcesContent":["const API = \"http://localhost:8080\";\n\nexport const createUser = (user) => {\n  return fetch(`${API}/api/user`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(user),\n  })\n    .then((reponse) => {\n      return reponse.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const readUsers = () => {\n  return fetch(`${API}/api/user`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((reponse) => {\n      return reponse.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const readUserById = (userId) => {\n  return fetch(`${API}/api/user/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((reponse) => {\n      return reponse.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const updateUser = (userId, user) => {\n  return fetch(`${API}/api/user/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(user),\n  })\n    .then((reponse) => {\n      return reponse.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\nexport const deleteUser = (userId) => {\n  return fetch(`${API}/api/user/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  })\n    .then((reponse) => {\n      return reponse.json();\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n"],"mappings":"AAAA,MAAMA,GAAG,GAAG,uBAAuB;AAEnC,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAClC,OAAOC,KAAK,CAAC,GAAGH,GAAG,WAAW,EAAE;IAC9BI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC,CACCQ,IAAI,CAAEC,OAAO,IAAK;IACjB,OAAOA,OAAO,CAACC,IAAI,CAAC,CAAC;EACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMG,SAAS,GAAGA,CAAA,KAAM;EAC7B,OAAOd,KAAK,CAAC,GAAGH,GAAG,WAAW,EAAE;IAC9BI,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CACCI,IAAI,CAAEC,OAAO,IAAK;IACjB,OAAOA,OAAO,CAACC,IAAI,CAAC,CAAC;EACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMI,YAAY,GAAIC,MAAM,IAAK;EACtC,OAAOhB,KAAK,CAAC,GAAGH,GAAG,aAAamB,MAAM,EAAE,EAAE;IACxCf,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CACCI,IAAI,CAAEC,OAAO,IAAK;IACjB,OAAOA,OAAO,CAACC,IAAI,CAAC,CAAC;EACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMM,UAAU,GAAGA,CAACD,MAAM,EAAEjB,IAAI,KAAK;EAC1C,OAAOC,KAAK,CAAC,GAAGH,GAAG,aAAamB,MAAM,EAAE,EAAE;IACxCf,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC,CACCQ,IAAI,CAAEC,OAAO,IAAK;IACjB,OAAOA,OAAO,CAACC,IAAI,CAAC,CAAC;EACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMO,UAAU,GAAIF,MAAM,IAAK;EACpC,OAAOhB,KAAK,CAAC,GAAGH,GAAG,aAAamB,MAAM,EAAE,EAAE;IACxCf,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1B,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CACCI,IAAI,CAAEC,OAAO,IAAK;IACjB,OAAOA,OAAO,CAACC,IAAI,CAAC,CAAC;EACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;IACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAClB,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}